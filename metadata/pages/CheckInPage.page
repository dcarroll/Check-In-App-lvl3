<apex:page sidebar="false" standardStylesheets="false" showheader="false" controller="CheckInController">
    <apex:includeScript value="//cdnjs.cloudflare.com/ajax/libs/knockout/3.0.0/knockout-min.js" />
    
    <!--Include Stylsheets for the Mobile look and feel -->
    <apex:stylesheet value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/css/app.min.css')}"/>
    <apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/js/jQuery2.0.2.min.js')}"/>
    
    <apex:stylesheet value="//code.jquery.com/mobile/1.0/jquery.mobile-1.0.min.css"/>
    <apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/js/jquery.touchwipe.min.js')}"/>
    <apex:includeScript value="//code.jquery.com/mobile/1.4.2/jquery.mobile-1.4.2.js"/>
    <apex:includeScript value="{!URLFOR($Resource.Mobile_Design_Templates, 
                'Mobile-Design-Templates-master/common/js/main.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.CheckInCSS)}" />
                
    <apex:includeScript value="/canvas/sdk/js/publisher.js" />
     <style>
        ul li, ol li {
            margin-left: 0em;
        }
         h2 {
	         font-size: 115%;
         }
         section>.content {
         	padding-top: 0px;
         	padding-bottom: 0px;
         }
    </style>
    <div class="app-content" id="startPage" data-bind="ifnot: selectedAccount">
        <div class="list-view-header">Nearby Accounts</div>
        <ul class="list-view with-swipe right-one-icons" data-bind="foreach: accountArray">
            <li>
                <a href="#" class="content" data-bind="click: toggleSelect" data-transition="slide">
                    <h2 data-bind="text: Name"></h2>
                    <p data-bind="text: BillingStreet"></p>
                    (<span data-bind="text: distance"></span>)
                    <div class="list-view-icons">
                        <span class="icon-right-arrow">&nbsp;</span>
                    </div>
                </a>
            </li>
        </ul>
    </div>
    <div class="result-page" id="resultPage" data-bind="if: selectedAccount" data-transition="slide">
<!--        <apex:pageBlock >
            <apex:pageBlockSection title="Stuff in a page block section"> -->
                <div class="list-view-header">Check In Information</div>
                <div data-bind="with: selectedAccount">
                    <section class="border-bottom">
                        <div class="content">
                            <h3>Account Name</h3>
                            <div class="form-control-group">
                                <div class="form-control form-control-text">
                                    <h1 data-bind="text: Name" style="line-height: 40px;"></h1>
                                    <h2 data-bind="text: Id" id="input_acctId" style="display:none;"></h2>
                                </div>
                            </div>
                        </div>
                    </section>
                    
                    <section class="border-bottom">
                        <div class="content">
                            <h3>Subject</h3>
                            <div class="form-control-group">
                                <div class="form-control form-control-text">
                                    <h2 style="line-height: 30px;">On-Site</h2>
                                </div>
                            </div>
                        </div>
                    </section>
                    
                    <section class="border-bottom">
                        <div class="content">
                            <h3>Status</h3>
                            <div class="form-control-group" style="margin-top: 10px;">
                                <div class="form-control form-control-text">
                                    <select id="input_status" data-bind="options: Task.availableStatus, value: Task.Status"></select>
                                </div>
                            </div>
                        </div>
                    </section>
                    
                    <section class="border-bottom">
                        <div class="content">
                            <h3>Comments</h3>
                            <div class="form-control-group" style="margin-top: 10px;">
                                <div class="form-control form-control-text">
                                    <input type="textarea" id="input_comments" value="Check In: On-Site Meeting"/>
                                </div>
                            </div>
                        </div>
                    </section>
                    
                    <section class="data-capture-buttons one-buttons">
                        <div class="content">
                            <section class="data-capture-buttons one-buttons">
                                <a href="#" data-bind="click: toggleSelect" >Back</a>
                            </section>
                        </div>
                    </section>
                </div> 
<!--            </apex:pageBlockSection>
        </apex:pageBlock> -->
    </div>
<script>
  
  $(document).ready(function(){
      initialize();
  });
        
  var ViewModel = {
    accountArray: ko.observableArray([]),
    selectedAccount: ko.observable(null)
  };

    function Task(json){
        json = json || {};
        this.availableStatus = ko.observableArray({!taskStatuses}); //['Completed', 'Not Started', 'Waiting on Someone Else', 'Deferred']);
    }
  
  function Account(json) {
    console.log(json);
    this.Id = json.Id || null;
    var d = document.createElement("div");
    d.innerHTML = json.Name || '';
    this.Name = d.firstChild.nodeValue;
    this.BillingStreet = json.BillingStreet || '';
    this.distance = '';
      
    this.Task = new Task();
    
    this.isSelected = ko.computed(function() {
      return ViewModel.selectedAccount() !== null &&
             ViewModel.selectedAccount().Id === this.Id;
    }, this);
      
    this.toggleSelect = function(account) {
      if (ViewModel.selectedAccount()) {
        ViewModel.selectedAccount(null);
        $("#startPage").show();
        $("#resultPage").hide();
        Sfdc.canvas.publisher.publish({name: "publisher.setValidForSubmit", payload:"false"});        
      } else {
        ViewModel.selectedAccount(account);
        //This method will activate the publish button so the form can be submitted 
        Sfdc.canvas.publisher.publish({name: "publisher.setValidForSubmit", payload:"true"});
        $("#startPage").hide();
        $("#resultPage").show();
      }
    };
  }
  
  ko.applyBindings(ViewModel);
  
    if (typeof(Number.prototype.toRadians) === "undefined") {
  		Number.prototype.toRadians = function() {
    		return this * Math.PI / 180;
  		}	
    }
    
    var dist = function(lat1, lon1, lat2, lon2) {
	    var R = 6371; // km
        var φ1 = lat1.toRadians();
        var φ2 = lat2.toRadians();
        var Δφ = (lat2-lat1).toRadians();
        var Δλ = (lon2-lon1).toRadians();
        
        var a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +
                Math.cos(φ1) * Math.cos(φ2) *
                Math.sin(Δλ/2) * Math.sin(Δλ/2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        
        var d = (R * c) / 1.609344 ;
        
    	return parseFloat(d).toFixed(2) + " mi.";
    }
    
    function initialize(){
        var lat = 0;
        var lon = 0;
        
        if (navigator.geolocation) {
            console.log("Hmm... I guess the navigator has a geolocation function");
            navigator.geolocation.getCurrentPosition(function(position){
                lat = position.coords.latitude;
                lon = position.coords.longitude;
                console.log("Returned from getCurrentPosition...\n" + lat + "\n" + lon);
                getNearby();
            });
            
            function getNearby(){ 
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CheckInController.getNearby}', lat, lon,
					function(result, event){
						if(event.status){
							ViewModel.accountArray(ko.utils.arrayMap(result, function(account) {
                                var d = dist(lat, lon, account.Location__Latitude__s, account.Location__Longitude__s);
								var a = new Account(account);
                                a.distance = d;
                                return a;
							}));
						} else if (event.type === 'exception'){
							console.log(result);
						} else {
					}
				});
            }
        } else {
            // display can't get location
            console.log("No geolocation function available in this browser!");
        }
    }

        Sfdc.canvas.publisher.subscribe({name: "publisher.post", onData:function(e) {
            // This subscribe fires when the user hits 'Submit' in the publisher
            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.CheckInController.insertTask}', $('#input_acctId').text(), $('#input_status').val(), $('#input_comments').val(),
                function(result, event){
                    if(event.status){
                        console.log(result);
                        //Closes the publisher and refreshes the feed
                        Sfdc.canvas.publisher.publish({name: "publisher.close", payload:{ refresh:"true"}});
                    } else if (event.type === 'exception'){
                        console.log(result);
                    } else {
                                        
                    }
                }
            );  
        }});                                           

</script>
</apex:page>